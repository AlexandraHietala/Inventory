-----------------------------------------------------------

-- Notes:


-----------------------------------------------------------

USE [StarryEdenBrand]
GO

-----------------------------------------------------------

CREATE OR ALTER TRIGGER [app].[Trigger_Brands_DELETE]
ON [app].[Brands] AFTER DELETE
AS

BEGIN 

	SET NOCOUNT ON;

	DECLARE @ID int
	DECLARE @BRAND_NAME varchar(50)
	DECLARE @DESCRIPTION varchar(250)
	DECLARE @CREATED_BY varchar(100)
	DECLARE @CREATED_DATE datetime
	DECLARE @LAST_MODIFIED_BY varchar(100)
	DECLARE @LAST_MODIFIED_DATE datetime

	SELECT @ID = ID FROM DELETED
	SELECT @BRAND_NAME = BRAND_NAME FROM DELETED
	SELECT @DESCRIPTION = DESCRIPTION FROM DELETED
	SELECT @CREATED_BY = CREATED_BY FROM DELETED
	SELECT @CREATED_DATE = CREATED_DATE FROM DELETED
	SELECT @LAST_MODIFIED_BY = LAST_MODIFIED_BY FROM DELETED
	SELECT @LAST_MODIFIED_DATE = LAST_MODIFIED_DATE FROM DELETED

	UPDATE [hist].[Audit_Brands]
	SET INEFFECTIVE_DATE = GETDATE()
	WHERE INEFFECTIVE_DATE IS NULL
	AND ID = @ID;

	INSERT INTO [hist].[Audit_Brands] (EFFECTIVE_DATE,INEFFECTIVE_DATE,ID,BRAND_NAME,DESCRIPTION,ADDED,DELETED,CREATED_BY,CREATED_DATE,LAST_MODIFIED_BY,LAST_MODIFIED_DATE) 
	VALUES (DATEADD(ms, 10,GETDATE()),GETDATE(),@ID,@BRAND_NAME,@DESCRIPTION,0,1,@CREATED_BY,@CREATED_DATE,@LAST_MODIFIED_BY,@LAST_MODIFIED_DATE); 		  
END

GO

-----------------------------------------------------------

CREATE OR ALTER TRIGGER [app].[Trigger_Brands_INSERT]
ON [app].[Brands] AFTER INSERT
AS

BEGIN 

	SET NOCOUNT ON;

	DECLARE @ID int
	DECLARE @BRAND_NAME varchar(50)
	DECLARE @DESCRIPTION varchar(250)
	DECLARE @CREATED_BY varchar(100)
	DECLARE @CREATED_DATE datetime
	DECLARE @LAST_MODIFIED_BY varchar(100)
	DECLARE @LAST_MODIFIED_DATE datetime

	SELECT @ID = ID FROM INSERTED
	SELECT @BRAND_NAME = BRAND_NAME FROM INSERTED
	SELECT @DESCRIPTION = DESCRIPTION FROM INSERTED
	SELECT @CREATED_BY = CREATED_BY FROM INSERTED
	SELECT @CREATED_DATE = CREATED_DATE FROM INSERTED
	SELECT @LAST_MODIFIED_BY = LAST_MODIFIED_BY FROM INSERTED
	SELECT @LAST_MODIFIED_DATE = LAST_MODIFIED_DATE FROM INSERTED

	INSERT INTO [hist].[Audit_Brands] (EFFECTIVE_DATE,INEFFECTIVE_DATE,ID,BRAND_NAME,DESCRIPTION,ADDED,DELETED,CREATED_BY,CREATED_DATE,LAST_MODIFIED_BY,LAST_MODIFIED_DATE) 
	VALUES (GETDATE(),NULL,@ID,@BRAND_NAME,@DESCRIPTION,1,0,@CREATED_BY,@CREATED_DATE,@LAST_MODIFIED_BY,@LAST_MODIFIED_DATE); 		  
END

GO

-----------------------------------------------------------

CREATE OR ALTER TRIGGER [app].[Trigger_Brands_UPDATE]
ON [app].[Brands] AFTER UPDATE
AS

BEGIN 

	SET NOCOUNT ON;

	DECLARE @ID int
	DECLARE @BRAND_NAME varchar(50)
	DECLARE @DESCRIPTION varchar(250)
	DECLARE @CREATED_BY varchar(100)
	DECLARE @CREATED_DATE datetime
	DECLARE @LAST_MODIFIED_BY varchar(100)
	DECLARE @LAST_MODIFIED_DATE datetime

	SELECT @ID = ID FROM INSERTED
	SELECT @BRAND_NAME = BRAND_NAME FROM INSERTED
	SELECT @DESCRIPTION = DESCRIPTION FROM INSERTED
	SELECT @CREATED_BY = CREATED_BY FROM INSERTED
	SELECT @CREATED_DATE = CREATED_DATE FROM INSERTED
	SELECT @LAST_MODIFIED_BY = LAST_MODIFIED_BY FROM INSERTED
	SELECT @LAST_MODIFIED_DATE = LAST_MODIFIED_DATE FROM INSERTED

	UPDATE [hist].[Audit_Brands]
	SET INEFFECTIVE_DATE = GETDATE()
	WHERE INEFFECTIVE_DATE IS NULL 
	AND ID = @ID;
		
	INSERT INTO [hist].[Audit_Brands] (EFFECTIVE_DATE,INEFFECTIVE_DATE,ID,BRAND_NAME,DESCRIPTION,ADDED,DELETED,CREATED_BY,CREATED_DATE,LAST_MODIFIED_BY,LAST_MODIFIED_DATE) 
	VALUES (GETDATE(),NULL,@ID,@BRAND_NAME,@DESCRIPTION,0,0,@CREATED_BY,@CREATED_DATE,@LAST_MODIFIED_BY,@LAST_MODIFIED_DATE);
END

GO

-----------------------------------------------------------
